Terraform is IaC Tool.
which manages all infra in declarative approach.

********* Core Fundamentals ************

1. Configuration Files:
    -- store files with .tf extentions.
    -- which is written ins HCL (HashiCorp Configuration Language)
    -- set up extention in VSCode: HashiCorp Terraform
    -- Install Terraform extention as well

2.Providers:
    -- Allows Terraform to interact with cloud Providers
    like AWS, Azure or GCP

    provider "aws" {
        region = "us-east-1"
    }

3. Resources:
    -- define infra component like VM, Database, S3 bucket or vpc

    resource "aws_instance" "server1"{
        ami = "image_id"
        instance_type = "t2.micro"
    }

4. variables:
    -- allowing to set parameters and make the code more dynamic

    variable "instance_type"{
        default = "t2.micro"
    }

    resource "aws_instance" "server1"{
        ami = "image_id"
        instance_type = var.instance_type
    }

5. Outputs:
    -- displays usefull information.

    output "instance_public_ip"{
        value=aws_instance.server1.public_ip
    }

6. state management:
    -- stores the Terraform state   
        terraform.tfstate

    -- track the changes of your resources

7. Work Flow:
    commands to run step by step to set up infra

    1. once the tf code ready
        initialize working directory
        terraform init 

    2. show the plan to be executed
        terraform plan

    3. execute the plan: terraform apply

    4. destroy the resources: terraform destroy

*****************************************************************

Install Terraform
-------------------
https://developer.hashicorp.com/terraform/tutorials/aws-get-started/install-cli

set up by exeting commands shown in documentaion.

