vault is a tool for securely storing and accessing secrets
API Keys, DB passwords, SSL certificates,encryption keys you can 
store in secrets.

to use vault instead of using .env files
-- manage leaks (git commit)
-- accidently sharing data
-- Valut supports dynamic secrets
-- provide centralized accessing
-- secure storega an encryption.

Let's use it locally.
--------------------------------
install Valut

sudo snap install vault
vault help (check vault options)

-- create server
vault server -dev

once server started you can export environment variable to use to
terraform

you can open another terminal 

$ export VAULT_ADDR='http://127.0.0.1:8200'
$ export VAULT_TOKEN='root token'

create and enable kv

vault secrets enable --path=secret kv

--Create secret
vault kv put secret/db-pass password="your_password"

-- access 
vault kv get secret/db-pass

To access them in terraform use below code in main.tf 

provider "vault" {
  address = "http://127.0.0.1:8200"
  token = var.token
}
data "vault_kv_secret" "db" {
  path = "your secret url"
}

create outputs.tf file:
output "database_password" {
  value = data.vault_kv_secret.db.data["password"]
  sensitive = true
}

Now run below commands:

terraform init
terraform apply

you can see that data is available in vault which is sensitive
